@model TechZone.Web.Models.HomeViewModel
@{
    Layout = "~/Views/Shared/Layouts.cshtml";
}
<div class="container">
    <div class="sub-cate" style="margin-top: -2%">
        <div class="">
            @*top-nav rsidebar span_1_of_left*@
            <ul class="menu">
                <h3 class="hero__categories__all"><span>&equiv; &nbsp; Danh mục sản phẩm</span></h3>
            </ul>
        </div>
    </div>
    <div class="shoes-grid">
        <section class="hero2 hero-normal2">
            <div>
                <div class="hero__search">
                    <div class="hero__search__form">
                        <form method="get" action="/tim-kiem.html/" style="border-top: 1px black solid; border-left: 1px black solid; border-bottom: 1px black solid; ">
                            <input type="text" id="txtKeyword" name="keyword" placeholder="Từ khóa">
                            <button type="submit" class="site-btn" value="Tìm kiếm" id="btnSearch" style="background:#40a2f8">SEARCH</button>
                        </form>
                    </div>
                    <div style="float: right"><a href="/gio-hang.html/"><img style="width: 60px; height:60px" src="~/Assets/client/images/cart.png" />GIỎ HÀNG</a></div>
                </div>
            </div>
        </section>
    </div>
</div>
<section class="breadcrumb-section set-bg2" style="background-image: url(/Assets//client/images/anhtieude.jpg); width: 100%">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 text-center">
                <div class="breadcrumb__text">
                    <h3>Chat GPT</h3>
                    <div class="breadcrumb__option">
                        <a href="/">Home &nbsp; &nbsp;</a>
                        <span> - &nbsp; &nbsp;</span>
                        <a href="/chat-gpt.html/">Giải đáp</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<div class="chat-container">
    <h1 style="text-align: center">Hỗ trợ</h1>
    <form id="chat-form" class="chat-input-form">
        <input type="text" id="chat-input" class="chat-input" placeholder="Nhập nội dung cần giải đáp" autocomplete="off">
        <button type="submit" class="chat-submit">Send</button>
    </form>
    <div id="chat-output" class="chat-output"></div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const chatForm = document.getElementById('chat-form');
        const chatInput = document.getElementById('chat-input');
        const chatOutput = document.getElementById('chat-output');

        // Change with your API key
        const api_key = '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'

        chatForm.addEventListener('submit', async (event) => {
            event.preventDefault();
            const message = chatInput.value.trim();

            if (message.length === 0) return;

            chatOutput.innerHTML += `<p class="user-message">${message}</p>`;
            chatInput.value = '';
            chatOutput.scrollTop = chatOutput.scrollHeight;

            const response = await fetch('https://api.openai.com/v1/chat/completions', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + api_key,
                },
                body: JSON.stringify(
                    {
                        max_tokens: 500,
                        "model": "gpt-3.5-turbo",
                        "messages": [{ "role": "user", "content": message }]
                    }
                )
            });

            if (response.ok) {
                const data = await response.json();
                chatOutput.innerHTML += `<p class="bot-message">${data.choices[0].message.content}</p>`;
                chatOutput.scrollTop = chatOutput.scrollHeight;
            } else {
                alert('Error communicating with ChatGPT API');
            }
        });
    });
</script>
